@import 'src/assets/theme/color.scss';
@import 'src/assets/theme/font.scss';
@import 'src/assets/theme/breakpoint.scss';
@import 'src/styles/variable.scss';

$mobile-padding-bottom: 30px;
$mobile-connect-wallet-button-height: 56px;
$mobile-connect-wallet-button-padding-top: 16px;
$mobile-connect-wallet-button-padding-bottom: 30px;

.container {
  @include media-mobile {
    display: flex;
    align-items: center;
    justify-content: center;
    height: 100%;
    min-height: 600px;
    margin-top: -$mobile-header-height;
  }
  @include media-pad {
    width: $content-width;
    margin: auto;
    padding-top: 80px;
    padding-bottom: 24px;
  }
  @include media-web {
    padding-top: 80px;
    padding-bottom: 24px;
  }
}

// A separate class name is used here to avoid invalidation of the padding style by incorporating the padding property in the production css.
.container-safe-area {
  @include media-mobile {
    padding-bottom: calc(
      (
          $mobile-connect-wallet-button-height + $mobile-connect-wallet-button-padding-top +
            $mobile-connect-wallet-button-padding-bottom
        ) + constant(safe-area-inset-bottom)
    );
    padding-bottom: calc(
      (
          $mobile-connect-wallet-button-height + $mobile-connect-wallet-button-padding-top +
            $mobile-connect-wallet-button-padding-bottom
        ) + env(safe-area-inset-bottom)
    );
  }
}

.logo {
  margin-bottom: 64px;
}

.large-logo {
  width: 164px;
  height: 164px;
  margin-bottom: 40px;
}

.primary-text {
  margin-bottom: 16px;
  @extend .font-family-medium;
  font-size: 24px;
  line-height: 32px;
  color: $primary-text;
}

.secondary-text {
  display: flex;
  flex-direction: column;
  align-items: center;
  gap: 4px;
}

.secondary-text-item {
  font-size: 14px;
  line-height: 22px;
  color: $secondary-text;
}

.connect-wallet-button-wrapper {
  min-width: $page-min-width;
  @include media-mobile {
    position: fixed;
    bottom: 0;
    width: 100%;
    padding: 0 16px;
    background-color: $page-bg;
  }
}

// A separate class name is used here to avoid invalidation of the padding style by incorporating the padding property in the production css.
.connect-wallet-button-wrapper-safe-area {
  @include media-mobile {
    padding-top: $mobile-connect-wallet-button-padding-top;
    padding-bottom: calc(
      $mobile-connect-wallet-button-padding-bottom + constant(safe-area-inset-bottom)
    );
    padding-bottom: calc(
      $mobile-connect-wallet-button-padding-bottom + env(safe-area-inset-bottom)
    );
  }
}

.connect-wallet-button {
  @include media-mobile {
    width: 100%;
  }
  @include media-pad {
    width: 400px;
    margin-top: 64px;
  }
  @include media-web {
    width: 400px;
    margin-top: 64px;
  }
}
